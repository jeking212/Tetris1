package com.tetris.saar.tetris;import android.graphics.Color;import android.media.Image;import android.support.annotation.NonNull;import android.support.v7.app.ActionBar;import android.support.v7.app.AppCompatActivity;import android.os.Bundle;import android.view.View;import android.view.ViewGroup;import android.widget.Button;import android.widget.ImageView;import android.widget.LinearLayout;import android.widget.Toast;import java.util.Random;public class GameActivity extends AppCompatActivity implements View.OnClickListener {    public ImageView[][] blocks = new ImageView[10][24]; //Displayed board    //Game Manager    GameManger gameManger = new GameManger(this);    //Used to run the game on a different thread    Runnable game= new GameThread(gameManger);    Thread thread =new Thread(game);    GameThread gameThread = new GameThread(gameManger);    //Buttons    Button btnRot;    Button btnRight;    Button btnLeft;    public GameActivity(){    }    @Override    protected void onCreate(Bundle savedInstanceState) {        super.onCreate(savedInstanceState);        setContentView(R.layout.activity_game);        //Random rnd = new Random();        //Syncing the java and the GUI        LinearLayout layout = (LinearLayout)findViewById(R.id.mainLayout);        btnRot = (Button)findViewById(R.id.btnRot);        btnRight = (Button)findViewById(R.id.btnRight);        btnLeft = (Button)findViewById(R.id.btnLeft);        btnRot.setOnClickListener(this);        btnRight.setOnClickListener(this);        btnLeft.setOnClickListener(this);        //Creating all the ImageView game board        for(int i=0; i< blocks.length; i++) {            LinearLayout row = new LinearLayout(this);            row.setOrientation(LinearLayout.VERTICAL);            layout.addView(row);            for (int j = 2; j < blocks[i].length; j++) {                    ImageView image = new ImageView(this);                    //image.setBackgroundColor(Color.rgb(rnd.nextInt(255), rnd.nextInt(255), rnd.nextInt(255)));                    LinearLayout.LayoutParams lp = new LinearLayout.LayoutParams(67, 67);                    lp.setMargins(0, 0, 0, 0);                    image.setLayoutParams(lp);                    image.setMaxHeight(0);                    image.setMaxWidth(0);                    image.setPadding(10, 10, 10, 10);                    String str = "iv" + i + j;                    int resID = getResources().getIdentifier(str, "id", getPackageName());                    image.setId(resID);                    blocks[i][j] = image;                    row.addView(image);            }        }        toDisplay();        //Starting the game        thread.start();    }    //Display the board ---> convert from int to colored Image View    public void toDisplay(){    int[][] board=  gameManger.getDisplay();        for(int i=blocks.length-1; i>=0; i--){            for(int j=blocks[i].length-1; j>=2; j--){                //Empty block                if(board[i][j]==0){                 blocks[i][j].setBackgroundColor(Color.argb(1000,0,0,0));                }                //Square                if(board[i][j] == 1){                    blocks[i][j].setBackgroundColor(Color.YELLOW);                }                //Line and up right                if(board[i][j] == 2){                    blocks[i][j].setBackgroundColor(Color.rgb(255,140,0));                }                //Line and up left                if(board[i][j]==3){                    blocks[i][j].setBackgroundColor(Color.rgb(0,0,205));                }                //Line                if(board[i][j]==4){                    blocks[i][j].setBackgroundColor(Color.rgb(135,206,250));                }                //Z shaperd                if(board[i][j]==5){                    blocks[i][j].setBackgroundColor(Color.RED);                }                //T shaped                if(board[i][j]==6){                    blocks[i][j].setBackgroundColor(Color.rgb(138,43,226));                }                //S shaped                if(board[i][j]==7){                    blocks[i][j].setBackgroundColor(Color.GREEN);                }            }        }    }    //Checking for button click    public void onClick(View view){        if(view.getId() == btnRot.getId()){            gameThread.needToChange();        }        if(view.getId() == btnRight.getId()){            gameThread.moveRight();        }        if(view.getId() ==btnLeft.getId()){            gameThread.moveLeft();        }    }    public void changeText(String text){        btnRight.setText(text);    }}//Full visible == 1000 alpha